name: "Build OCP addons"
description: "Build OCP Addons"
inputs:
  os:
    description: "Operating system to use for the build"
    required: true
  python-version:
    description: "Python version to use for the build"
    required: true
  shells:
    description: "Shell configuration for the OS"
    required: true
  wheel-version:
    description: "Version of the wheel to build"
    required: true


runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    
    # - - -

    - name: Restore wheel
      id: cache-wheel-restore
      uses: actions/cache/restore@v4
      with:
        path: ${{ github.workspace }}/wheelhouse/
        key: ocp-addons-${{ inputs.wheel-version }}-wheel-${{ inputs.os }}-cp${{ inputs.python-version }}-
    
    # - - -

    - name: Install Linux Dependencies (x86_64)
      if: runner.os == 'Linux' && steps.cache-wheel-restore.outputs.cache-hit != 'true'
      shell: bash -leo pipefail {0}
      run: |
        # Install Linux Dependencies (x86_64)

        apt-get update -qq
        # apt-get install -qq -y freetype* libfreetype6-dev libgl1-mesa-glx git \
        #                        ca-certificates patch gcc-9 g++-9 build-essential  > /dev/null 2>&1
        apt-get install -qq -y git ca-certificates patch gcc-9 g++-9 build-essential  > /dev/null 2>&1

    # - - -

    - name: Install MacOS Dependencies (x86_64 / arm64)
      if: runner.os == 'macOS' && steps.cache-wheel-restore.outputs.cache-hit != 'true'
      shell: bash -leo pipefail {0}
      run: |
        # Install MacOS Dependencies (x86_64 / arm64)

        brew install gsed
        # ensure gnu sed is in PATH before system (BSD) sed
        sudo ln -s "$(brew --prefix gnu-sed)/libexec/gnubin/sed" /usr/local/bin/sed

    # - - -
    
    - name: Prepare environment.yml
      if: steps.cache-wheel-restore.outputs.cache-hit != 'true'
      shell: bash -leo pipefail {0}
      run: |
        # Prepare environment.yml

        sed -i 's/python=3\.1[0-9]/python=${{ inputs.python-version }}/' environment.yml

        cat environment.yml

    # - - -
    
    - name: Set up Python ${{ inputs.python-version }} via micromamba
      if: steps.cache-wheel-restore.outputs.cache-hit != 'true'
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-file: environment.yml
        log-level: warning
        init-shell: ${{ inputs.shells }}
        cache-environment: true
        cache-environment-key: environment-${{ inputs.python-version }}-${{ inputs.os }}

    # - - -

    - name: Build wheel on Windows
      if: runner.os == 'Windows' && steps.cache-wheel-restore.outputs.cache-hit != 'true'
      shell: cmd
      run: |
        rem Build wheel on Windows
        
        micromamba run -n build-ocp-addons make wheel-windows
        dir wheelhouse

    # - - -

    - name: Build wheel on MacOS, Linux
      if: runner.os != 'Windows' && steps.cache-wheel-restore.outputs.cache-hit != 'true'
      shell: bash -leo pipefail {0}
      run: |
        # Build wheel on MacOS, Linux
        
        if [[ "$RUNNER_OS" == "macOS" ]]; then
          make wheel-macos
        else
          make wheel-linux
        fi
        ls -l wheelhouse

    # - - -

    - name: Cache wheel
      id: cache-wheel-save
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}/wheelhouse/
        key: ${{ steps.cache-wheel-restore.outputs.cache-primary-key }}

    # - - -

    - name: Upload Artifact
      if: not startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: ocp-addons-${{ inputs.wheel-version }}-wheel-${{ inputs.os }}-cp${{ inputs.python-version }}
        path: ./wheelhouse/*.whl

    # - - -

    - name: Upload wheels to GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ./wheelhouse/*.whl

